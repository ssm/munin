#!/bin/sh

: << =cut

=head1 NAME

df_inode - Plugin to monitor inode-usage.

=head1 NOTES

This plugin is meant to be generic unix but there will be specific
kinks on each platform that may justify custom versions.  It does not
work on SunOS/Solaris/Cygwin.

=head1 CONFIGURATION

The following environment variables are used by this plugin:

 warning  - Warning percentage (Default: 92)
 critical - Critical percentage (Default: 98)

=head1 MAGIC MARKERS:

 #%# family=auto
 #%# capabilities=autoconf

=cut

. "${MUNIN_LIBDIR}/plugins/plugin.sh"

get_data() {
    df -P -l -i -x btrfs 2>/dev/null | sed -e '1d' -e '/\/\//d' -e 's/%//'
}

print_values() {
    get_data |
        while read dev avail used free pct fs; do
            fieldname=$(clean_fieldname "$dev")
            printf "%s.value %s\n" "$fieldname" "$pct"
        done
}

print_graph_config() {
    echo 'graph_title Inode usage in percent'
    echo 'graph_args --upper-limit 100 -l 0'
    echo 'graph_vlabel %'
    echo 'graph_scale no'
    echo 'graph_category disk'
}

print_ds_config() {
    get_data |
        while read dev avail used free pct fs; do
	    fieldname=$(clean_fieldname "$dev")
	    printf "%s.label %s\n" "$fieldname" "$fs"
	    print_warning "$fieldname"
	    print_critical "$fieldname"
        done
}

print_ds_dirtyconfig() {
    get_data |
        while read dev avail used free pct fs; do
	    name=$(clean_fieldname $dev)
	    printf "%s.label %s\n" "$name" "$fs"
	    print_warning "$name"
	    print_critical "$name"
            echo "$(clean_fieldname $dev).value $pct"
        done
}

print_config() {
    print_graph_config
    if [ -n "${CAP_MUNIN_DIRTYCONFIG:-}" ]; then
	print_ds_dirtyconfig
    else
	print_ds_config
    fi
}

print_autoconf() {
    if [ -z "$(print_values)" ] ; then
	echo no
    else
	echo yes
    fi
}

case "${1:-}" in
    autoconf)
	print_autoconf
	;;
    config)
	print_config
	;;
    *)
	print_values
	;;
esac
